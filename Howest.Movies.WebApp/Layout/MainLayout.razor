@using Howest.Movies.Dtos.Filters
@using Howest.Movies.Sdk.Endpoints.Abstractions
@inherits LayoutComponentBase

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudAutocomplete
            T="MovieResult" @bind-Value="_movieResult" ResetValueOnEmptyText="true" OnInternalInputChanged="Callback"
            SearchFuncWithCancel="@Search" Immediate="true" ToStringFunc="ToStringFunc" MinCharacters="2" Clearable="true"
            AdornmentIcon="@Icons.Material.Filled.Search" Adornment="Adornment.Start" Placeholder="Search"
            Margin="Margin.Dense" Variant="Variant.Outlined" Dense="true" Style="background: #edfff2; color: black; border-radius: .3em;">
            <ItemTemplate>
                <MovieListItem Movie="context" />
            </ItemTemplate>
            <NoItemsTemplate>
                <MudText Typo="Typo.h5">No items found.</MudText>
            </NoItemsTemplate>
        </MudAutocomplete>
        <MudSpacer/>
        <MudTooltip Text="Login">
            <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit"/>
        </MudTooltip>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MovieResult? _movieResult;
    
    [Inject] private IMovieEndpoint MovieEndpoint { get; init; } = null!;
    [Inject] private NavigationManager NavigationManager { get; init; } = null!;
    
    private async Task<IEnumerable<MovieResult>> Search(string value, CancellationToken token)
    {
        var result = await MovieEndpoint.GetAsync(new MoviesFilter
        {
            Query = value
        }, new PaginationFilter(), token);
        if (!result.IsSuccess)
            return new List<MovieResult>();
        
        return result.Data!.Items;
    }

    private string ToStringFunc(MovieResult arg)
    {
        return arg.Title;
    }

    private void Callback(ChangeEventArgs e)
    {
        Console.WriteLine("Callback");
        
        if (_movieResult is null)
            return;
        
        NavigationManager.NavigateTo($"/movie/{_movieResult.Id}");
    }
}