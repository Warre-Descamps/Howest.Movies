@page "/movie/{MovieId:guid}"
@using Howest.Movies.Sdk.Endpoints.Abstractions

<MudOverlay Visible="@(_movieDetails == null)" DarkBackground="true" Absolute="true">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>
@if (_movieDetails != null)
{
    <MudStack Row="true" Spacing="10" Wrap="Wrap.NoWrap" AlignItems="AlignItems.Center" Class="mt-5">
        <MudImage ObjectFit="ObjectFit.Contain" ObjectPosition="ObjectPosition.Left" Width="300" Src="@_movieDetails.Poster" Alt="@_movieDetails.Title" Style="border-radius: .5em;"></MudImage>
        <MudStack>
            <MudText Typo="Typo.h4">@_movieDetails.Title</MudText>
            <MudText Typo="Typo.caption">Directed by @_movieDetails.Director</MudText>
            <MudText Typo="Typo.subtitle2">@_movieDetails.ReleaseDate.Date.Year</MudText>
            <MudText Typo="Typo.subtitle2">
                @foreach (var genre in _movieDetails.Genres)
                {
                    <span class="me-2">
                        @genre
                        @if (genre != _movieDetails.Genres.Last())
                        {
                            <span>,</span>
                        }
                    </span>
                }
            </MudText>
            <MudText Typo="Typo.body1" Style="max-width: 900px;">@_movieDetails.Description</MudText>
        </MudStack>
    </MudStack>
}

@code
{
    private MovieDetailResult? _movieDetails;

    [Inject] private IMovieEndpoint MovieEndpoint { get; init; } = null!;
    [Inject] private NavigationManager NavigationManager { get; init; } = null!;

    [Parameter] public Guid MovieId { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        if (MovieId == Guid.Empty)
        {
            NavigationManager.NavigateTo("/");
        }

        var result = await MovieEndpoint.GetAsync(MovieId);
        if (result.IsSuccess)
        {
            _movieDetails = result.Data;
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}